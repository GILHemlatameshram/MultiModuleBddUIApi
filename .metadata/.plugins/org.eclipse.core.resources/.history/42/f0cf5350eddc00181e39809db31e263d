package com.qa.stepDefinitionsApi;

public class OrgStepDefinition {
	@Given("^Simple init$")
	public void simple_init() throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^Set web application url to \"([^\"]*)\"$")
	public void set_web_application_url_to(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^Set GET api endpoint as \"([^\"]*)\"$")
	public void set_GET_api_endpoint_as(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^Set HEADER param response accept type as \"([^\"]*)\"$")
	public void set_HEADER_param_response_accept_type_as(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^Set Query param as \"([^\"]*)\"$")
	public void set_Query_param_as(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^Raise \"([^\"]*)\" HTTP request$")
	public void raise_HTTP_request(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^Valid HTTP response should be received$")
	public void valid_HTTP_response_should_be_received() throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^Response http code should be (\\d+)$")
	public void response_http_code_should_be(int arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^Response HEADER content type should be \"([^\"]*)\"$")
	public void response_HEADER_content_type_should_be(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^Response BODY should not be null or empty$")
	public void response_BODY_should_not_be_null_or_empty() throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^Response BODY parsing for \"([^\"]*)\" should be successful$")
	public void response_BODY_parsing_for_should_be_successful(String arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}


}
